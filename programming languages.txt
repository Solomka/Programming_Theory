Programming languages:

1. Java -> 
                Multi-paradigm: Object-oriented (class-based), structured, imperative, generic, reflective, concurrent

                Designed by James Gosling (Nationality  Canadian)

                Developer  Sun Microsystems (now owned by Oracle Corporation)
2. C++ ->
                It has imperative, object-oriented and generic programming features, while also providing facilities for low-level memory manipulation.

                Multi-paradigm: procedural, functional, object-oriented, generic[1]

                Designed by Bjarne Stroustrup (Nationality  Danish)

3. Ruby ->
            Ruby is a language of careful balance. Its creator, Yukihiro “Matz” Matsumoto, blended parts of his favorite languages (Perl, Smalltalk, Eiffel, Ada, and Lisp) to form 
            a new language that balanced functional programming with imperative programming.

            Ruby is simple in appearance, but is very complex inside, just like our human body1.

            It supports multiple programming paradigms, including functional, object-oriented, and imperative. 
            Multi-paradigm: Object-oriented, imperative, functional, reflective

            Developer   Yukihiro Matsumoto 'Matz', et al. ( Nationality Japan)

4. JavaScript ->
                Multi-paradigm: scripting, object-oriented (prototype-based), imperative, functional, event-driven[1]

                Designed by Brendan Eich (American)

5. Python ->
            Python supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles. 

                multi-paradigm: object-oriented, imperative, functional, procedural, reflective

                Designed by Guido van Rossum (Nationality   Dutch)

6. Perl ->
                multi-paradigm: functional, imperative, object-oriented (class-based), reflective, procedural, event-driven, generic

                Developer   Larry Wall (Nationality American)


7. C ->

                Imperative (procedural), structured

                Designed by Dennis Ritchie (Nationality American)

8. C# -> 
                multi-paradigm: structured, imperative, object-oriented, event-driven, task-driven, functional, generic, reflective, concurrent

                Designed by Microsoft
9. Scala ->
                Scala has full support for functional programming and a strong static type system. Designed to be concise,[10] many of Scala's design decisions were inspired by criticism of Java's shortcomings (недолік)

                Multi-paradigm: functional, object-oriented, imperative, concurrent

                Designed by    Martin Odersky ( Nationality  German )

10. Groovy -> 
                Apache Groovy is an object-oriented programming language for the Java platform. It is a dynamic language with features similar to those of Python, Ruby, Perl, and Smalltalk. It can be used as a scripting language for the Java Platform, is dynamically compiled to Java Virtual Machine (JVM) bytecode, and interoperates with other Java code and libraries. Groovy uses a Java-like curly-bracket syntax. Most Java code is also syntactically valid Groovy, although semantics may be different.

                    Object-oriented, imperative, scripting

                    Design by   James Strachan (Nationality Englishman) in 2003
11. Clojure

Of the new languages that have been created from scratch to compile to Java bytecode, Clojure, Groovy and Scala may be the most popular ones. A notable feature with the JVM languages is that they are compatible with each other, so that, for example, Scala libraries can be used with Java programs and vice versa.
 *** code written for Apple products ***

10. Objective-C ->
                Objective-C is a general-purpose, object-oriented programming language that adds Smalltalk-style messaging to the C programming language. It was the main programming language used by Apple for the OS X and iOS operating systems, and their respective application programming interfaces (APIs) Cocoa and Cocoa Touch prior to the introduction of Swift.

                Paradigm    Reflective, class-based object-oriented

11. Swift ->   
                Multi-paradigm: protocol-oriented, object-oriented, functional, imperative, block structured

                Designed by Chris Lattner (Nationality  American) and Apple Inc.

                Developer   Apple Inc.